#!/usr/bin/env bash

VERSION="1.0.0"
API_URL="http://localhost:8080/api/notification"


print_help() {
    echo ""
    echo "NotifyX CLI — Real-Time Notification Tool"
    echo "Usage: notifyx <command> [options]"
    echo ""
    echo "Commands:"
    echo "  send        Send a notification to a user"
    echo "  bulk        Send notifications to multiple users from a file"
    echo "  status      Check notification status for a user"
    echo "  version     Show CLI version"
    echo "  help        Show this help message"
    echo ""
    echo "Use 'notifyx <command> --help' for more info on a command"
    echo ""
}

#Send Notification
send_notification() {
    while [[ "$#" -gt 0 ]]; do
        case $1 in
            --to) USERID="$2"; shift ;;
            --message) MESSAGE="$2"; shift ;;
            --type) TYPE="$2"; shift ;;
            --help) echo "Usage: notifyx send --to <userId> --message <msg> [--type TYPE]"; exit 0 ;;
            *) echo "Unknown option: $1"; exit 1 ;;
        esac
        shift
    done

    TYPE=${TYPE:-INFO}

    if [[ -z "$USERID" || -z "$MESSAGE" ]]; then
        echo "Missing required flags --to and/or --message"
        exit 1
    fi

    curl -s -X POST "$API_URL/send" \
        -H "Content-Type: application/json" \
        -d "{\"userId\":\"$USERID\", \"message\":\"$MESSAGE\", \"type\":\"$TYPE\"}" |
        jq
}

#Send Notifications
send_bulk() {
    FILE="$1"
    if [[ ! -f "$FILE" ]]; then
        echo "❌ File not found: $FILE"
        exit 1
    fi

    JSON_ARRAY="["

    while IFS= read -r line || [ -n "$line" ]; do
        USER=$(echo "$line" | cut -d',' -f1 | xargs)
        MSG=$(echo "$line" | cut -d',' -f2 | xargs)
        TYPE=$(echo "$line" | cut -d',' -f3 | xargs)

        JSON_ARRAY="${JSON_ARRAY}{\"userId\":\"$USER\",\"message\":\"$MSG\",\"type\":\"$TYPE\"},"
    done < "$FILE"

    # Remove trailing comma and close the array
    JSON_ARRAY="${JSON_ARRAY%,}]"

    curl -s -X POST "$API_URL/bulk" \
        -H "Content-Type: application/json" \
        -d "$JSON_ARRAY" | jq
}



#Status
check_status() {
    while [[ "$#" -gt 0 ]]; do
        case $1 in
           --user) USERID="$2"; shift ;;
            --help) echo "Usage: notifyx status --user <userId>"; exit 0 ;;
            *) echo "Unknown option: $1"; exit 1 ;;
        esac
        shift
    done

    if [[ -z "$USERID" ]]; then
        echo "Missing --user flag"
        exit 1
    fi

    curl -s "$API_URL/status/$USERID" | jq
}

#Version
check_version() {
	curl -s "$API_URL/version" | jq
}

# Router
case "$1" in
    send) shift; send_notification "$@" ;;
    bulk) shift; send_bulk "$@" ;;
    status) shift; check_status "$@" ;;
    version) shift; check_version "$@" ;;
    help|"") print_help ;;
    *) echo "Unknown command: $1"; print_help; exit 1 ;;
esac
